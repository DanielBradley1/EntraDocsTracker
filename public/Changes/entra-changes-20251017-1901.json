[
  {
    "sha": "e3cc03f97864409a4389c82f358e277a8f4ec609",
    "url": "https://github.com/MicrosoftDocs/entra-docs/commit/e3cc03f97864409a4389c82f358e277a8f4ec609",
    "author": "Learn Build Service GitHub App",
    "email": "Learn Build Service LearnBuild@microsoft.com",
    "date": "2025-10-17T17:14:05Z",
    "message": "Merging changes synced from https://github.com/MicrosoftDocs/entra-docs-pr (branch live)",
    "ai_summary": {
      "Messages": "{\"role\":\"user\",\"content\":\"The following is the commit files that have changed: [\\r\\n  {\\r\\n    \\\"sha\\\": \\\"5c183b4635729446d778b2f387b06161162b3d7b\\\",\\r\\n    \\\"filename\\\": \\\"docs/external-id/customers/how-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 182,\\r\\n    \\\"deletions\\\": 5,\\r\\n    \\\"changes\\\": 187,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/e3cc03f97864409a4389c82f358e277a8f4ec609/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/e3cc03f97864409a4389c82f358e277a8f4ec609/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md?ref=e3cc03f97864409a4389c82f358e277a8f4ec609\\\",\\r\\n    \\\"patch\\\": \\\"@@ -47,7 +47,7 @@ To integrate Arkose Labs with Microsoft Entra External ID, you can use the Servi\\\\n \\\\n 1. Sign in to the [Microsoft Entra admin center](https://entra.microsoft.com) as at least an [Authentication Extensibility Administrator](/entra/identity/role-based-access-control/permissions-reference#authentication-extensibility-administrator) or [Application Administrator](/entra/identity/role-based-access-control/permissions-reference#application-administrator).\\\\n 1. If you have access to multiple tenants, use the **Settings** icon :::image type=\\\\\\\"icon\\\\\\\" source=\\\\\\\"media/common/admin-center-settings-icon.png\\\\\\\" border=\\\\\\\"false\\\\\\\"::: in the top menu to switch to the external tenant from the **Directories + subscriptions** menu.\\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to start the wizard.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to start the wizard.\\\\n \\\\n    :::image type=\\\\\\\"content\\\\\\\" source=\\\\\\\"media/how-to-integrate-fraud-protection/configure-sign-up-protection.png\\\\\\\" alt-text=\\\\\\\"Screenshot showing the Sign-up protection (Preview) page.\\\\\\\":::\\\\n \\\\n@@ -84,19 +84,110 @@ Once the policy is created, it's applied to the selected applications. When a us\\\\n \\\\n ## Edit the Arkose Labs configuration in the Microsoft Entra admin center  \\\\n \\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n 1. Select the **Edit provider configurations** option to edit the Arkose Labs policy. If you want to edit the fraud protection policy, select the pencil icon.\\\\n 1. In the **Configure Arkose Labs for sign-up protection** step, select the configuration you want to edit and select **Next**.\\\\n 1. Select the app you want to protect with Arkose Labs fraud protection or remove the existing ones. You can select one or more applications that you have registered in your external tenant. Once you selected the app, select **Next**.\\\\n 1. Select **Done** to finish the wizard.\\\\n \\\\n+## Configure Arkose Labs using Microsoft Graph API\\\\n+\\\\n+Configure Arkose Labs fraud protection by using the Microsoft Graph API. This approach is useful if you want to automate the configuration or if you prefer using APIs over the Microsoft Entra admin center.\\\\n+\\\\n+### Step 1: Sign in to the tenant\\\\n+\\\\n+To configure Arkose Labs fraud protection, you need to sign in to your external tenant and consent to the required permissions.\\\\n+\\\\n+1. Start [Microsoft Graph Explorer tool](https://aka.ms/ge).\\\\n+\\\\n+1. Sign in to your external tenant: `https://developer.microsoft.com/en-us/graph/graph-explorer?tenant=<your-tenant-name.onmicrosoft.com>`.\\\\n+\\\\n+1. Select your profile and then select **Consent to permissions**.\\\\n+\\\\n+1. Consent to the following required permission.\\\\n+\\\\n+    - `RiskPreventionProviders.ReadWrite.All`\\\\n+\\\\n+### Step 2: Register Arkose Labs as a fraud protection provider\\\\n+\\\\n+To register Arkose Labs as a fraud protection provider, you [create a fraudProtectionProvider policy](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders) in your external tenant. This policy contains the Arkose configuration values that you received from Arkose Labs.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/riskPrevention/fraudProtectionProviders\\\\n+    ```\\\\n+\\\\n+2. In the **Request Body** section, enter the following JSON payload, replacing the placeholders with your Arkose configuration values:\\\\n+\\\\n+    ```json\\\\n+    {\\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.arkoseFraudProtectionProvider\\\\\\\",\\\\n+        \\\\\\\"displayName\\\\\\\": \\\\\\\"<your-arkose-configuration-name>\\\\\\\",\\\\n+        \\\\\\\"publicKey\\\\\\\": \\\\\\\"<your-arkose-public-key>\\\\\\\",\\\\n+        \\\\\\\"privateKey\\\\\\\": \\\\\\\"<your-arkose-private-key>\\\\\\\",\\\\n+        \\\\\\\"clientSubDomain\\\\\\\": \\\\\\\"<your-client-api>\\\\\\\",\\\\n+        \\\\\\\"verifySubDomain\\\\\\\": \\\\\\\"<your-verify-api>\\\\\\\"\\\\n+    }\\\\n+    ```\\\\n+\\\\n+3. Select **Run Query** to create the fraud protection provider.\\\\n+4. If the request is successful, a **201 Created** response is returned. Copy the `id` value from the response for the next step.\\\\n+\\\\n+### Step 3: Link Arkose protection to your application\\\\n+\\\\n+In this step, you link the Arkose fraud protection provider to your application by creating a new [authenticationEventListener](/graph/api/identitycontainer-post-authenticationeventlisteners) that triggers the Arkose challenge during the sign-up flow. Make sure that you have the appId for the application where you want to enable fraud protection. Replace `<your-app-id>` with your application's ID, and replace `<id-from-previous-step>` with the Arkose provider ID from the previous step.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/authenticationEventListeners\\\\n+    ```\\\\n+\\\\n+1. In the **Request Body** section, enter the following JSON payload:\\\\n+\\\\n+    ```json\\\\n+    { \\\\n+      \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartListener\\\\\\\", \\\\n+      \\\\\\\"conditions\\\\\\\": { \\\\n+        \\\\\\\"applications\\\\\\\": { \\\\n+          \\\\\\\"includeApplications\\\\\\\": [ \\\\n+            { \\\\n+              \\\\\\\"appId\\\\\\\": \\\\\\\"<your-app-id>\\\\\\\" \\\\n+            } \\\\n+          ] \\\\n+        } \\\\n+      }, \\\\n+      \\\\\\\"handler\\\\\\\": { \\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartExternalUsersAuthHandler\\\\\\\", \\\\n+        \\\\\\\"signUp\\\\\\\": { \\\\n+          \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.fraudProtectionProviderConfiguration\\\\\\\", \\\\n+          \\\\\\\"fraudProtectionProvider\\\\\\\": { \\\\n+            \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.arkoseFraudProtectionProvider\\\\\\\", \\\\n+            \\\\\\\"id\\\\\\\": \\\\\\\"<id-from-previous-step>\\\\\\\" \\\\n+          } \\\\n+        } \\\\n+      } \\\\n+    }\\\\n+    ```\\\\n+\\\\n+1. Select **Run Query**.\\\\n+1. If the request is successful, a **201 Created** response is returned. Test the sign-up flow in your application to verify that the Arkose challenge appears when a suspicious sign-up is detected.\\\\n+\\\\n+### Troubleshooting tips\\\\n+\\\\n+| Issue                        | Possible Cause                   | Resolution                                              |\\\\n+|-----------------------------|----------------------------------|---------------------------------------------------------|\\\\n+| Challenge doesn't appear.   | Event listener not linked to app. | Verify app ID and listener configuration.              |\\\\n+| Users blocked on challenge. | Strict Arkose thresholds.         | Work with Arkose to adjust challenge behavior.         |\\\\n+\\\\n ::: zone-end  \\\\n \\\\n ::: zone pivot=\\\\\\\"human\\\\\\\"\\\\n \\\\n ## How HUMAN Security works\\\\n \\\\n-When a user initiates the sign-up process, it is critical to prevent automated bots and malicious actors from creating fraudulent accounts. To address this, Entra External ID supports integration with third-party fraud detection providers such as HUMAN Security. This integration enables real-time analysis of sign-up attempts, leveraging HUMAN Securityâ€™s advanced detection algorithms to identify and block suspicious activity before account creation is completed. The solution is natively integrated with Microsoft identity infrastructure, allowing for streamlined deployment and management. By implementing this approach, organizations can access detailed telemetry and actionable insights to monitor sign-up flows, fine-tune detection thresholds, and respond proactively to emerging threats, thereby maintaining the integrity of their user base.\\\\n+When a user initiates the sign-up process, it is critical to prevent automated bots and malicious actors from creating fraudulent accounts. To address this, Entra External ID supports integration with third-party fraud detection providers such as HUMAN Security. This integration enables real-time analysis of sign-up attempts, leveraging HUMAN Securityâ€™s advanced detection algorithms to identify and block suspicious activity before account creation is completed. The solution is natively integrated with Microsoft identity infrastructure, allowing for streamlined deployment and management. By implementing this approach, organizations can access detailed data and actionable insights to monitor sign-up flows, fine-tune detection thresholds, and respond proactively to emerging threats, thereby maintaining the integrity of their user base.\\\\n \\\\n ## Prerequisites\\\\n \\\\n@@ -116,7 +207,7 @@ To integrate HUMAN Security with Microsoft Entra External ID, you can use the Se\\\\n \\\\n 1. Sign in to the [Microsoft Entra admin center](https://entra.microsoft.com) as at least an [Authentication Extensibility Administrator](/entra/identity/role-based-access-control/permissions-reference#authentication-extensibility-administrator) or [Application Administrator](/entra/identity/role-based-access-control/permissions-reference#application-administrator).\\\\n 1. If you have access to multiple tenants, use the **Settings** icon :::image type=\\\\\\\"icon\\\\\\\" source=\\\\\\\"media/common/admin-center-settings-icon.png\\\\\\\" border=\\\\\\\"false\\\\\\\"::: in the top menu to switch to the external tenant from the **Directories + subscriptions** menu.\\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to start the wizard.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to start the wizard.\\\\n \\\\n    :::image type=\\\\\\\"content\\\\\\\" source=\\\\\\\"media/how-to-integrate-fraud-protection/configure-sign-up-protection.png\\\\\\\" alt-text=\\\\\\\"Screenshot showing the Sign-up protection (Preview) page.\\\\\\\":::\\\\n \\\\n@@ -145,12 +236,98 @@ Once the policy is created, it's applied to the selected applications. When a us\\\\n \\\\n ## Edit the HUMAN Security configuration in the Microsoft Entra admin center  \\\\n \\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n 1. Select the **Edit provider configurations** option to edit the HUMAN Security policy. If you want to edit the fraud protection policy, select the pencil icon.\\\\n 1. In the **Configure HUMAN Security for sign-up protection** step, select the configuration you want to edit and select **Next**.\\\\n 1. Select the app you want to protect with HUMAN Security fraud protection or remove the existing ones. You can select one or more applications that you have registered in your external tenant. Once you selected the app, select **Next**.\\\\n 1. Select **Done** to finish the wizard.\\\\n \\\\n+## Configure HUMAN Security using Microsoft Graph API\\\\n+\\\\n+Configure HUMAN Security fraud protection by using the Microsoft Graph API. This approach is useful if you want to automate the configuration or if you prefer using APIs over the Microsoft Entra admin center.\\\\n+\\\\n+### Step 1: Sign in to the tenant\\\\n+\\\\n+To configure HUMAN Security fraud protection, you need to sign in to your external tenant and consent to the required permissions.\\\\n+\\\\n+1. Start [Microsoft Graph Explorer tool](https://aka.ms/ge).\\\\n+\\\\n+1. Sign in to your external tenant: `https://developer.microsoft.com/en-us/graph/graph-explorer?tenant=<your-tenant-name.onmicrosoft.com>`.\\\\n+\\\\n+1. Select your profile and then select **Consent to permissions**.\\\\n+\\\\n+1. Consent to the following required permission.\\\\n+\\\\n+    - `RiskPreventionProviders.ReadWrite.All`\\\\n+\\\\n+### Step 2: Register HUMAN Security as a fraud protection provider\\\\n+\\\\n+To register HUMAN Security as a fraud protection provider, you [create a fraudProtectionProvider policy](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders) in your external tenant. This policy contains the HUMAN Security configuration values that you've received while setting up your HUMAN Security account.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/riskPrevention/fraudProtectionProviders\\\\n+    ```\\\\n+\\\\n+2. In the **Request Body** section, enter the following JSON payload, replacing the placeholders with your HUMAN configuration values:\\\\n+\\\\n+    ```json\\\\n+    {\\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.HUMANFraudProtectionProvider\\\\\\\",\\\\n+        \\\\\\\"displayName\\\\\\\": \\\\\\\"<your-human-configuration-name>\\\\\\\",\\\\n+        \\\\\\\"appId\\\\\\\": \\\\\\\"<your-human-appid>\\\\\\\",  \\\\n+        \\\\\\\"serverToken\\\\\\\": \\\\\\\"<your-human-server-token>\\\\\\\",\\\\n+    }\\\\n+    ```\\\\n+\\\\n+The `displayName` is a display name for this specific  HUMAN Security  configuration, for example, \\\\\\\"HUMAN Config 1\\\\\\\". The `appId` is the Application ID from HUMAN Security, and the `serverToken` is the Server token from HUMAN Security that you can find in the HUMAN Security admin console. If you're unsure about any value, contact HUMAN Security for assistance.\\\\n+\\\\n+3. Select **Run Query** to create the fraud protection provider.\\\\n+4. If the request is successful, a **201 Created** response is returned. Copy the `id` value from the response for the next step.\\\\n+\\\\n+### Step 3: Link HUMAN Security protection to your application\\\\n+\\\\n+In this step, you link the HUMAN Security fraud protection provider to your application by creating a new [authenticationEventListener](/graph/api/identitycontainer-post-authenticationeventlisteners) to use the HUMAN Security fraud protection during the sign-up flow. Make sure that you have the appId for the application where you want to enable fraud protection. Replace `<your-app-id>` with your application's ID, and replace `<id-from-previous-step>` with the HUMAN Security provider ID from the previous step.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/authenticationEventListeners\\\\n+    ```\\\\n+\\\\n+1. In the **Request Body** section, enter the following JSON payload:\\\\n+\\\\n+    ```json\\\\n+    { \\\\n+      \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartListener\\\\\\\", \\\\n+      \\\\\\\"conditions\\\\\\\": { \\\\n+        \\\\\\\"applications\\\\\\\": { \\\\n+          \\\\\\\"includeApplications\\\\\\\": [ \\\\n+            { \\\\n+              \\\\\\\"appId\\\\\\\": \\\\\\\"<your-app-id>\\\\\\\" \\\\n+            } \\\\n+          ] \\\\n+        } \\\\n+      }, \\\\n+      \\\\\\\"handler\\\\\\\": { \\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartExternalUsersAuthHandler\\\\\\\", \\\\n+        \\\\\\\"signUp\\\\\\\": { \\\\n+          \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.fraudProtectionProviderConfiguration\\\\\\\", \\\\n+          \\\\\\\"fraudProtectionProvider\\\\\\\": { \\\\n+            \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.HUMANFraudProtectionProvider\\\\\\\", \\\\n+            \\\\\\\"id\\\\\\\": \\\\\\\"<id-from-previous-step>\\\\\\\" \\\\n+          } \\\\n+        } \\\\n+      } \\\\n+    }\\\\n+    ```\\\\n+\\\\n+1. Select **Run Query**.\\\\n+1. If the request is successful, a **201 Created** response is returned. Test the sign-up flow in your application to verify that the HUMAN challenge appears when a suspicious sign-up is detected.\\\\n+\\\\n ::: zone-end  \\\\n \\\\n+## Related content\\\\n \\\\n+- [Create fraudProtectionProvider](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders)\\\\n\\\\\\\\ No newline at end of file\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"8169d0dff526491016180147951e73fd5328e1d4\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/saas-apps/sap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 1,\\r\\n    \\\"changes\\\": 2,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/e3cc03f97864409a4389c82f358e277a8f4ec609/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/e3cc03f97864409a4389c82f358e277a8f4ec609/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md?ref=e3cc03f97864409a4389c82f358e277a8f4ec609\\\",\\r\\n    \\\"patch\\\": \\\"@@ -93,7 +93,7 @@ This diagram illustrates the high-level data flow and configuration steps.\\\\n     - References: \\\\n         - [Replicating employee data from SAP ERP HCM](https://help.sap.com/doc/2eff62546be748739ca05477c2ab7ba7/2505/en-US/SF_ERP_EC_EE_Data_HCI_en-US.pdf)\\\\n         - [2214465 - Integration Add-On 3.0 for SAP ERP HCM - SAP for Me](https://me.sap.com/notes/0002214465) (requires SAP support login) \\\\n-        - Slide deck explaining integration between [SAP ERP HCM and SuccessFactors](https://s3-eu-west-1.amazonaws.com/static.wm3.se/sites/572/media/339260_Integration_between_SAP_ERP_HCM_and_SuccessFactors_BizX.pdf?1572267595)\\\\n+        - Slide deck explaining the integration between **SAP ERP HCM and SuccessFactors**, presented at the [SBN Conference 2019](https://sbn.no/2019_sbnconference). To download the presentation from the conference site, go to **Day 1 > Wed 13:30-14:10 > Integration between SAP ERP HCM and SuccessFactors Trygve Berg, Capgemini**.\\\\n \\\\t> [!NOTE]\\\\n     > CSV Files can have delta (or incremental) data. \\\\n - **Step 2**: In Microsoft Entra, configure the API-driven provisioning app to receive employee data from SAP HCM.\\\"\\r\\n  }\\r\\n]. Please summarise it in a few sentences, using UK grammar and ensure the response is formatted for markdown. Do not start the response with here is summary.\"}",
      "Response": "The changes introduce a new method for configuring Arkose Labs and HUMAN Security fraud protection via the Microsoft Graph API, alongside updates to the Microsoft Entra admin centre navigation for these features. Additionally, a link within the SAP HCM integration documentation has been updated to point to a more specific resource for the SAP ERP HCM and SuccessFactors integration.",
      "Model": "google:gemini-2.5-flash-lite",
      "Provider": "google",
      "ModelName": "gemini-2.5-flash-lite",
      "Timestamp": "2025-10-17T19:01:37.0857945+00:00"
    },
    "files": [
      {
        "filename": "docs/external-id/customers/how-to-integrate-fraud-protection.md",
        "status": "modified",
        "additions": 182,
        "deletions": 5
      },
      {
        "filename": "docs/identity/saas-apps/sap-hcm-microsoft-entra-identity-provisioning.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1
      }
    ]
  },
  {
    "sha": "07bf43427a729ccc1912d9db476c34bddb83fb34",
    "url": "https://github.com/MicrosoftDocs/entra-docs/commit/07bf43427a729ccc1912d9db476c34bddb83fb34",
    "author": "learn-build-service-prod[bot]",
    "email": "113403604+learn-build-service-prod[bot]@users.noreply.github.com",
    "date": "2025-10-17T17:11:18Z",
    "message": "Merge pull request #10059 from MicrosoftDocs/main\n\nAuto Publish â€“ main to live - 2025-10-17 17:08 UTC",
    "ai_summary": {
      "Messages": "{\"role\":\"user\",\"content\":\"The following is the commit files that have changed: [\\r\\n  {\\r\\n    \\\"sha\\\": \\\"5c183b4635729446d778b2f387b06161162b3d7b\\\",\\r\\n    \\\"filename\\\": \\\"docs/external-id/customers/how-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 182,\\r\\n    \\\"deletions\\\": 5,\\r\\n    \\\"changes\\\": 187,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/07bf43427a729ccc1912d9db476c34bddb83fb34/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/07bf43427a729ccc1912d9db476c34bddb83fb34/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fexternal-id%2Fcustomers%2Fhow-to-integrate-fraud-protection.md?ref=07bf43427a729ccc1912d9db476c34bddb83fb34\\\",\\r\\n    \\\"patch\\\": \\\"@@ -47,7 +47,7 @@ To integrate Arkose Labs with Microsoft Entra External ID, you can use the Servi\\\\n \\\\n 1. Sign in to the [Microsoft Entra admin center](https://entra.microsoft.com) as at least an [Authentication Extensibility Administrator](/entra/identity/role-based-access-control/permissions-reference#authentication-extensibility-administrator) or [Application Administrator](/entra/identity/role-based-access-control/permissions-reference#application-administrator).\\\\n 1. If you have access to multiple tenants, use the **Settings** icon :::image type=\\\\\\\"icon\\\\\\\" source=\\\\\\\"media/common/admin-center-settings-icon.png\\\\\\\" border=\\\\\\\"false\\\\\\\"::: in the top menu to switch to the external tenant from the **Directories + subscriptions** menu.\\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to start the wizard.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to start the wizard.\\\\n \\\\n    :::image type=\\\\\\\"content\\\\\\\" source=\\\\\\\"media/how-to-integrate-fraud-protection/configure-sign-up-protection.png\\\\\\\" alt-text=\\\\\\\"Screenshot showing the Sign-up protection (Preview) page.\\\\\\\":::\\\\n \\\\n@@ -84,19 +84,110 @@ Once the policy is created, it's applied to the selected applications. When a us\\\\n \\\\n ## Edit the Arkose Labs configuration in the Microsoft Entra admin center  \\\\n \\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n 1. Select the **Edit provider configurations** option to edit the Arkose Labs policy. If you want to edit the fraud protection policy, select the pencil icon.\\\\n 1. In the **Configure Arkose Labs for sign-up protection** step, select the configuration you want to edit and select **Next**.\\\\n 1. Select the app you want to protect with Arkose Labs fraud protection or remove the existing ones. You can select one or more applications that you have registered in your external tenant. Once you selected the app, select **Next**.\\\\n 1. Select **Done** to finish the wizard.\\\\n \\\\n+## Configure Arkose Labs using Microsoft Graph API\\\\n+\\\\n+Configure Arkose Labs fraud protection by using the Microsoft Graph API. This approach is useful if you want to automate the configuration or if you prefer using APIs over the Microsoft Entra admin center.\\\\n+\\\\n+### Step 1: Sign in to the tenant\\\\n+\\\\n+To configure Arkose Labs fraud protection, you need to sign in to your external tenant and consent to the required permissions.\\\\n+\\\\n+1. Start [Microsoft Graph Explorer tool](https://aka.ms/ge).\\\\n+\\\\n+1. Sign in to your external tenant: `https://developer.microsoft.com/en-us/graph/graph-explorer?tenant=<your-tenant-name.onmicrosoft.com>`.\\\\n+\\\\n+1. Select your profile and then select **Consent to permissions**.\\\\n+\\\\n+1. Consent to the following required permission.\\\\n+\\\\n+    - `RiskPreventionProviders.ReadWrite.All`\\\\n+\\\\n+### Step 2: Register Arkose Labs as a fraud protection provider\\\\n+\\\\n+To register Arkose Labs as a fraud protection provider, you [create a fraudProtectionProvider policy](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders) in your external tenant. This policy contains the Arkose configuration values that you received from Arkose Labs.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/riskPrevention/fraudProtectionProviders\\\\n+    ```\\\\n+\\\\n+2. In the **Request Body** section, enter the following JSON payload, replacing the placeholders with your Arkose configuration values:\\\\n+\\\\n+    ```json\\\\n+    {\\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.arkoseFraudProtectionProvider\\\\\\\",\\\\n+        \\\\\\\"displayName\\\\\\\": \\\\\\\"<your-arkose-configuration-name>\\\\\\\",\\\\n+        \\\\\\\"publicKey\\\\\\\": \\\\\\\"<your-arkose-public-key>\\\\\\\",\\\\n+        \\\\\\\"privateKey\\\\\\\": \\\\\\\"<your-arkose-private-key>\\\\\\\",\\\\n+        \\\\\\\"clientSubDomain\\\\\\\": \\\\\\\"<your-client-api>\\\\\\\",\\\\n+        \\\\\\\"verifySubDomain\\\\\\\": \\\\\\\"<your-verify-api>\\\\\\\"\\\\n+    }\\\\n+    ```\\\\n+\\\\n+3. Select **Run Query** to create the fraud protection provider.\\\\n+4. If the request is successful, a **201 Created** response is returned. Copy the `id` value from the response for the next step.\\\\n+\\\\n+### Step 3: Link Arkose protection to your application\\\\n+\\\\n+In this step, you link the Arkose fraud protection provider to your application by creating a new [authenticationEventListener](/graph/api/identitycontainer-post-authenticationeventlisteners) that triggers the Arkose challenge during the sign-up flow. Make sure that you have the appId for the application where you want to enable fraud protection. Replace `<your-app-id>` with your application's ID, and replace `<id-from-previous-step>` with the Arkose provider ID from the previous step.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/authenticationEventListeners\\\\n+    ```\\\\n+\\\\n+1. In the **Request Body** section, enter the following JSON payload:\\\\n+\\\\n+    ```json\\\\n+    { \\\\n+      \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartListener\\\\\\\", \\\\n+      \\\\\\\"conditions\\\\\\\": { \\\\n+        \\\\\\\"applications\\\\\\\": { \\\\n+          \\\\\\\"includeApplications\\\\\\\": [ \\\\n+            { \\\\n+              \\\\\\\"appId\\\\\\\": \\\\\\\"<your-app-id>\\\\\\\" \\\\n+            } \\\\n+          ] \\\\n+        } \\\\n+      }, \\\\n+      \\\\\\\"handler\\\\\\\": { \\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartExternalUsersAuthHandler\\\\\\\", \\\\n+        \\\\\\\"signUp\\\\\\\": { \\\\n+          \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.fraudProtectionProviderConfiguration\\\\\\\", \\\\n+          \\\\\\\"fraudProtectionProvider\\\\\\\": { \\\\n+            \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.arkoseFraudProtectionProvider\\\\\\\", \\\\n+            \\\\\\\"id\\\\\\\": \\\\\\\"<id-from-previous-step>\\\\\\\" \\\\n+          } \\\\n+        } \\\\n+      } \\\\n+    }\\\\n+    ```\\\\n+\\\\n+1. Select **Run Query**.\\\\n+1. If the request is successful, a **201 Created** response is returned. Test the sign-up flow in your application to verify that the Arkose challenge appears when a suspicious sign-up is detected.\\\\n+\\\\n+### Troubleshooting tips\\\\n+\\\\n+| Issue                        | Possible Cause                   | Resolution                                              |\\\\n+|-----------------------------|----------------------------------|---------------------------------------------------------|\\\\n+| Challenge doesn't appear.   | Event listener not linked to app. | Verify app ID and listener configuration.              |\\\\n+| Users blocked on challenge. | Strict Arkose thresholds.         | Work with Arkose to adjust challenge behavior.         |\\\\n+\\\\n ::: zone-end  \\\\n \\\\n ::: zone pivot=\\\\\\\"human\\\\\\\"\\\\n \\\\n ## How HUMAN Security works\\\\n \\\\n-When a user initiates the sign-up process, it is critical to prevent automated bots and malicious actors from creating fraudulent accounts. To address this, Entra External ID supports integration with third-party fraud detection providers such as HUMAN Security. This integration enables real-time analysis of sign-up attempts, leveraging HUMAN Securityâ€™s advanced detection algorithms to identify and block suspicious activity before account creation is completed. The solution is natively integrated with Microsoft identity infrastructure, allowing for streamlined deployment and management. By implementing this approach, organizations can access detailed telemetry and actionable insights to monitor sign-up flows, fine-tune detection thresholds, and respond proactively to emerging threats, thereby maintaining the integrity of their user base.\\\\n+When a user initiates the sign-up process, it is critical to prevent automated bots and malicious actors from creating fraudulent accounts. To address this, Entra External ID supports integration with third-party fraud detection providers such as HUMAN Security. This integration enables real-time analysis of sign-up attempts, leveraging HUMAN Securityâ€™s advanced detection algorithms to identify and block suspicious activity before account creation is completed. The solution is natively integrated with Microsoft identity infrastructure, allowing for streamlined deployment and management. By implementing this approach, organizations can access detailed data and actionable insights to monitor sign-up flows, fine-tune detection thresholds, and respond proactively to emerging threats, thereby maintaining the integrity of their user base.\\\\n \\\\n ## Prerequisites\\\\n \\\\n@@ -116,7 +207,7 @@ To integrate HUMAN Security with Microsoft Entra External ID, you can use the Se\\\\n \\\\n 1. Sign in to the [Microsoft Entra admin center](https://entra.microsoft.com) as at least an [Authentication Extensibility Administrator](/entra/identity/role-based-access-control/permissions-reference#authentication-extensibility-administrator) or [Application Administrator](/entra/identity/role-based-access-control/permissions-reference#application-administrator).\\\\n 1. If you have access to multiple tenants, use the **Settings** icon :::image type=\\\\\\\"icon\\\\\\\" source=\\\\\\\"media/common/admin-center-settings-icon.png\\\\\\\" border=\\\\\\\"false\\\\\\\"::: in the top menu to switch to the external tenant from the **Directories + subscriptions** menu.\\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to start the wizard.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to start the wizard.\\\\n \\\\n    :::image type=\\\\\\\"content\\\\\\\" source=\\\\\\\"media/how-to-integrate-fraud-protection/configure-sign-up-protection.png\\\\\\\" alt-text=\\\\\\\"Screenshot showing the Sign-up protection (Preview) page.\\\\\\\":::\\\\n \\\\n@@ -145,12 +236,98 @@ Once the policy is created, it's applied to the selected applications. When a us\\\\n \\\\n ## Edit the HUMAN Security configuration in the Microsoft Entra admin center  \\\\n \\\\n-1. Browse to **Home** > **Service Integrations** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n+1. Browse to **Home** > **Security Store** > **Sign-up protection (Preview)** to view the list of configurations.\\\\n 1. Select the **Edit provider configurations** option to edit the HUMAN Security policy. If you want to edit the fraud protection policy, select the pencil icon.\\\\n 1. In the **Configure HUMAN Security for sign-up protection** step, select the configuration you want to edit and select **Next**.\\\\n 1. Select the app you want to protect with HUMAN Security fraud protection or remove the existing ones. You can select one or more applications that you have registered in your external tenant. Once you selected the app, select **Next**.\\\\n 1. Select **Done** to finish the wizard.\\\\n \\\\n+## Configure HUMAN Security using Microsoft Graph API\\\\n+\\\\n+Configure HUMAN Security fraud protection by using the Microsoft Graph API. This approach is useful if you want to automate the configuration or if you prefer using APIs over the Microsoft Entra admin center.\\\\n+\\\\n+### Step 1: Sign in to the tenant\\\\n+\\\\n+To configure HUMAN Security fraud protection, you need to sign in to your external tenant and consent to the required permissions.\\\\n+\\\\n+1. Start [Microsoft Graph Explorer tool](https://aka.ms/ge).\\\\n+\\\\n+1. Sign in to your external tenant: `https://developer.microsoft.com/en-us/graph/graph-explorer?tenant=<your-tenant-name.onmicrosoft.com>`.\\\\n+\\\\n+1. Select your profile and then select **Consent to permissions**.\\\\n+\\\\n+1. Consent to the following required permission.\\\\n+\\\\n+    - `RiskPreventionProviders.ReadWrite.All`\\\\n+\\\\n+### Step 2: Register HUMAN Security as a fraud protection provider\\\\n+\\\\n+To register HUMAN Security as a fraud protection provider, you [create a fraudProtectionProvider policy](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders) in your external tenant. This policy contains the HUMAN Security configuration values that you've received while setting up your HUMAN Security account.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/riskPrevention/fraudProtectionProviders\\\\n+    ```\\\\n+\\\\n+2. In the **Request Body** section, enter the following JSON payload, replacing the placeholders with your HUMAN configuration values:\\\\n+\\\\n+    ```json\\\\n+    {\\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.HUMANFraudProtectionProvider\\\\\\\",\\\\n+        \\\\\\\"displayName\\\\\\\": \\\\\\\"<your-human-configuration-name>\\\\\\\",\\\\n+        \\\\\\\"appId\\\\\\\": \\\\\\\"<your-human-appid>\\\\\\\",  \\\\n+        \\\\\\\"serverToken\\\\\\\": \\\\\\\"<your-human-server-token>\\\\\\\",\\\\n+    }\\\\n+    ```\\\\n+\\\\n+The `displayName` is a display name for this specific  HUMAN Security  configuration, for example, \\\\\\\"HUMAN Config 1\\\\\\\". The `appId` is the Application ID from HUMAN Security, and the `serverToken` is the Server token from HUMAN Security that you can find in the HUMAN Security admin console. If you're unsure about any value, contact HUMAN Security for assistance.\\\\n+\\\\n+3. Select **Run Query** to create the fraud protection provider.\\\\n+4. If the request is successful, a **201 Created** response is returned. Copy the `id` value from the response for the next step.\\\\n+\\\\n+### Step 3: Link HUMAN Security protection to your application\\\\n+\\\\n+In this step, you link the HUMAN Security fraud protection provider to your application by creating a new [authenticationEventListener](/graph/api/identitycontainer-post-authenticationeventlisteners) to use the HUMAN Security fraud protection during the sign-up flow. Make sure that you have the appId for the application where you want to enable fraud protection. Replace `<your-app-id>` with your application's ID, and replace `<id-from-previous-step>` with the HUMAN Security provider ID from the previous step.\\\\n+\\\\n+1. In the Microsoft Graph Explorer, select the **POST** method and enter the following URL:\\\\n+\\\\n+    ```http\\\\n+    https://graph.microsoft.com/beta/identity/authenticationEventListeners\\\\n+    ```\\\\n+\\\\n+1. In the **Request Body** section, enter the following JSON payload:\\\\n+\\\\n+    ```json\\\\n+    { \\\\n+      \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartListener\\\\\\\", \\\\n+      \\\\\\\"conditions\\\\\\\": { \\\\n+        \\\\\\\"applications\\\\\\\": { \\\\n+          \\\\\\\"includeApplications\\\\\\\": [ \\\\n+            { \\\\n+              \\\\\\\"appId\\\\\\\": \\\\\\\"<your-app-id>\\\\\\\" \\\\n+            } \\\\n+          ] \\\\n+        } \\\\n+      }, \\\\n+      \\\\\\\"handler\\\\\\\": { \\\\n+        \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.onFraudProtectionLoadStartExternalUsersAuthHandler\\\\\\\", \\\\n+        \\\\\\\"signUp\\\\\\\": { \\\\n+          \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.fraudProtectionProviderConfiguration\\\\\\\", \\\\n+          \\\\\\\"fraudProtectionProvider\\\\\\\": { \\\\n+            \\\\\\\"@odata.type\\\\\\\": \\\\\\\"#microsoft.graph.HUMANFraudProtectionProvider\\\\\\\", \\\\n+            \\\\\\\"id\\\\\\\": \\\\\\\"<id-from-previous-step>\\\\\\\" \\\\n+          } \\\\n+        } \\\\n+      } \\\\n+    }\\\\n+    ```\\\\n+\\\\n+1. Select **Run Query**.\\\\n+1. If the request is successful, a **201 Created** response is returned. Test the sign-up flow in your application to verify that the HUMAN challenge appears when a suspicious sign-up is detected.\\\\n+\\\\n ::: zone-end  \\\\n \\\\n+## Related content\\\\n \\\\n+- [Create fraudProtectionProvider](/graph/api/riskpreventioncontainer-post-fraudprotectionproviders)\\\\n\\\\\\\\ No newline at end of file\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"8169d0dff526491016180147951e73fd5328e1d4\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/saas-apps/sap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 1,\\r\\n    \\\"changes\\\": 2,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/07bf43427a729ccc1912d9db476c34bddb83fb34/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/07bf43427a729ccc1912d9db476c34bddb83fb34/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fsaas-apps%2Fsap-hcm-microsoft-entra-identity-provisioning.md?ref=07bf43427a729ccc1912d9db476c34bddb83fb34\\\",\\r\\n    \\\"patch\\\": \\\"@@ -93,7 +93,7 @@ This diagram illustrates the high-level data flow and configuration steps.\\\\n     - References: \\\\n         - [Replicating employee data from SAP ERP HCM](https://help.sap.com/doc/2eff62546be748739ca05477c2ab7ba7/2505/en-US/SF_ERP_EC_EE_Data_HCI_en-US.pdf)\\\\n         - [2214465 - Integration Add-On 3.0 for SAP ERP HCM - SAP for Me](https://me.sap.com/notes/0002214465) (requires SAP support login) \\\\n-        - Slide deck explaining integration between [SAP ERP HCM and SuccessFactors](https://s3-eu-west-1.amazonaws.com/static.wm3.se/sites/572/media/339260_Integration_between_SAP_ERP_HCM_and_SuccessFactors_BizX.pdf?1572267595)\\\\n+        - Slide deck explaining the integration between **SAP ERP HCM and SuccessFactors**, presented at the [SBN Conference 2019](https://sbn.no/2019_sbnconference). To download the presentation from the conference site, go to **Day 1 > Wed 13:30-14:10 > Integration between SAP ERP HCM and SuccessFactors Trygve Berg, Capgemini**.\\\\n \\\\t> [!NOTE]\\\\n     > CSV Files can have delta (or incremental) data. \\\\n - **Step 2**: In Microsoft Entra, configure the API-driven provisioning app to receive employee data from SAP HCM.\\\"\\r\\n  }\\r\\n]. Please summarise it in a few sentences, using UK grammar and ensure the response is formatted for markdown. Do not start the response with here is summary.\"}",
      "Response": "This commit updates documentation for integrating fraud protection with Microsoft Entra External ID, introducing a new section for configuring HUMAN Security via the Microsoft Graph API, and also updates the navigation path for \"Sign-up protection\" from \"Service Integrations\" to \"Security Store\". Additionally, a reference link for SAP HCM integration has been clarified to point to a specific presentation from the SBN Conference 2019.",
      "Model": "google:gemini-2.5-flash-lite",
      "Provider": "google",
      "ModelName": "gemini-2.5-flash-lite",
      "Timestamp": "2025-10-17T19:01:38.7198878+00:00"
    },
    "files": [
      {
        "filename": "docs/external-id/customers/how-to-integrate-fraud-protection.md",
        "status": "modified",
        "additions": 182,
        "deletions": 5
      },
      {
        "filename": "docs/identity/saas-apps/sap-hcm-microsoft-entra-identity-provisioning.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1
      }
    ]
  }
]