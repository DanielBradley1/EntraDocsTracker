[
  {
    "sha": "eb28f7511eaaaf4cf23df0518f556f40c17ef976",
    "url": "https://github.com/MicrosoftDocs/entra-docs/commit/eb28f7511eaaaf4cf23df0518f556f40c17ef976",
    "author": "Learn Build Service GitHub App",
    "email": "Learn Build Service LearnBuild@microsoft.com",
    "date": "2025-10-16T05:15:20Z",
    "message": "Merging changes synced from https://github.com/MicrosoftDocs/entra-docs-pr (branch live)",
    "ai_summary": {
      "Messages": "{\"content\":\"The following is the commit files that have changed: [\\r\\n  {\\r\\n    \\\"sha\\\": \\\"8b22779c8780e29c76ebf3e04384f6c7a7535bda\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity-platform/apple-sso-plugin.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 1,\\r\\n    \\\"changes\\\": 2,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity-platform%2Fapple-sso-plugin.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity-platform%2Fapple-sso-plugin.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity-platform%2Fapple-sso-plugin.md?ref=eb28f7511eaaaf4cf23df0518f556f40c17ef976\\\",\\r\\n    \\\"patch\\\": \\\"@@ -420,7 +420,7 @@ You don't need to change the code in those apps as long as the following conditi\\\\n \\\\n In this case, SSO is provided when the application creates a network request and opens a web browser to sign the user in. When a user is redirected to a Microsoft Entra sign-in URL, the SSO plug-in validates the URL and checks for an SSO credential for that URL. If it finds the credential, the SSO plug-in passes it to Microsoft Entra ID, which authorizes the application to complete the network request without asking the user to enter credentials. Additionally, if the device is known to Microsoft Entra ID, the SSO plug-in passes the device certificate to satisfy the device-based Conditional Access check. \\\\n \\\\n-To support SSO for non-MSAL apps, the SSO plug-in implements a protocol similar to the Windows browser plug-in described in [What is a primary refresh token?](~/identity/devices/concept-primary-refresh-token.md#browser-sso-using-prt). \\\\n+To support SSO for non-MSAL apps, the SSO plug-in implements a protocol similar to the Windows browser plug-in described in [What is a primary refresh token?](~/identity/devices/concept-primary-refresh-token.md#how-is-a-prt-used). \\\\n \\\\n Compared to MSAL-based apps, the SSO plug-in acts more transparently for non-MSAL apps. It integrates with the existing browser sign-in experience that apps provide. \\\\n \\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"f3c61ec0b4944756a53ede4ac23746aa9d9fe6ab\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/devices/concept-primary-refresh-token.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 67,\\r\\n    \\\"deletions\\\": 20,\\r\\n    \\\"changes\\\": 87,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md?ref=eb28f7511eaaaf4cf23df0518f556f40c17ef976\\\",\\r\\n    \\\"patch\\\": \\\"@@ -8,7 +8,7 @@ ms.date: 06/27/2025\\\\n ms.author: owinfrey\\\\n author: owinfreyATL\\\\n manager: dougeby\\\\n-ms.reviewer: \\\\n+ms.reviewer: jploegert\\\\n ms.custom: sfi-image-nochange\\\\n ---\\\\n # Understanding Primary Refresh Token (PRT)\\\\n@@ -23,6 +23,7 @@ The following Windows components play a key role in requesting and using a Prima\\\\n \\\\n | **Term** | **Description** |\\\\n | :--- | --- |\\\\n+| **broker** | An identity broker is a service that acts as an intermediary between an identity providers (IdPs) and service providers (SPs), simplifying authentication and authorization . Web Account Manager is an example of an identity broker.|\\\\n | **Cloud Authentication Provider (CloudAP)**| CloudAP is the modern authentication provider for Windows sign in, that verifies users logging to a Windows 10 or newer device. CloudAP provides a plugin framework that identity providers can build on to enable authentication to Windows using that identity provider's credentials. |\\\\n | **Web Account Manager (WAM)**| WAM is the default token broker on Windows 10 or newer devices. WAM also provides a plugin framework that identity providers can build on and enable SSO to their applications relying on that identity provider.|\\\\n | **Microsoft Entra CloudAP plugin**| A Microsoft Entra specific plugin built on the CloudAP framework that verifies user credentials with Microsoft Entra ID during Windows sign in.|\\\\n@@ -55,12 +56,12 @@ For **Registered device PRTs**, the PRT is issued to users on registered devices\\\\n - Device key (dkpub/dkpriv)\\\\n - Transport key (tkpub/tkpriv)\\\\n \\\\n-If the device has a valid and functioning TPM/Secure Hardware Storage, the private keys are bound to the device’s Secure Storage on supported platforms. The public keys are sent to Microsoft Entra ID during the device registration process in order to validate the device state during PRT requests.\\\\n-\\\\n PRT can only be issued when a Microsoft Entra ID broker is present. Broker is a component distributed with the following apps: Intune Company Portal on macOS and Linux, Authenticator on iOS, Authenticator, Link to Windows, and Company portal on Android. On Mac, Mobile Device Management (MDM) is required to activate the broker alongside the SSO extension profile: [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md)\\\\n \\\\n ### [Windows](#tab/windows-prt-issued)\\\\n \\\\n+If the device has a valid and functioning TPM/Secure Hardware Storage, the private keys are bound to the device’s Secure Storage on supported platforms. The public keys are sent to Microsoft Entra ID during the device registration process in order to validate the device state during PRT requests.\\\\n+\\\\n The PRT is issued during user authentication on a Windows 10 or newer device in two scenarios:\\\\n \\\\n * **Microsoft Entra joined** or **Microsoft Entra hybrid joined**: A PRT is issued during Windows sign-in when a user signs in with their organization credentials. A PRT is issued with all Windows 10 or newer supported credentials, for example, password and Windows Hello for Business. In this scenario, Microsoft Entra CloudAP plugin is the primary authority for the PRT\\\\n@@ -72,13 +73,19 @@ In Microsoft Entra registered device scenarios, the Microsoft Entra WAM plugin i\\\\n \\\\n ### [macOS](#tab/macos-prt-issued)\\\\n \\\\n+**macOS with Platform SSO**\\\\n+\\\\n macOS [Platform Single Sign-on (PSSO)](macos-psso.md) is a new feature powered by Microsoft’s Enterprise SSO plug-in, Platform Credentials for macOS that enables users to sign in to Mac devices using their Microsoft Entra ID credentials.\\\\n \\\\n The PSSO Primary Refresh Token (PRT) is issued exclusively to Entra-joined macOS devices that successfully completed Platform SSO registration. During this registration process, macOS generates secure enclave–backed cryptographic key pairs: one for device signing and another for device encryption. The public key references are shared with the SSO extension.\\\\n \\\\n The SSO extension uses these keys to complete device registration with the Microsoft Entra ID Device Registration Service. It then configures Apple’s loginConfiguration API with the necessary parameters for PRT acquisition.\\\\n \\\\n-Once registration is successfully completed, macOS initiates a sign in request signed with the Device Signing key. Microsoft Entra ID validates the request, device signing key and associated parameters, and issues PRT response. macOS decrypts this response using Device Encryption key, stores the PRT and makes it available to the SSO extension. The sign in request is sent during user authentication on PSSO registered macOS.\\\\n+**macOS without Platform SSO**\\\\n+\\\\n+macOS supports Unregistered PRTs for Microsoft Edge and Registered PRTs when device is workplace joined and broker is present\\\\n+\\\\n+Once registration is successfully completed, macOS initiates a sign in request signed with the Device Signing key. Microsoft Entra ID validates the request, device signing key and associated parameters, and issues PRT response.\\\\n \\\\n ### [iOS and Android](#tab/other-prt-issued)\\\\n \\\\n@@ -91,12 +98,32 @@ Once registration is successfully completed, macOS initiates a sign in request s\\\\n \\\\n ### Browser behavior\\\\n \\\\n-On non-Windows platforms, browsers gain access to the PRT in multiple ways:\\\\n+Browsers gain access to the PRT in multiple ways, depending on the operating system:\\\\n+\\\\n+### [Windows](#tab/browser-behavior-windows)\\\\n+\\\\n+Windows - Will pull the PRT from the broker into the browser on the following browsers:\\\\n+- Microsoft Edge\\\\n+- Firefox\\\\n+\\\\n+- Chrome\\\\n+\\\\n+### [Android](#tab/browser-behavior-android)\\\\n+\\\\n+Android - Microsoft Edge will pull the PRT from the broker into the browser\\\\n+\\\\n+### [iOS and macOS](#tab/browser-behavior-apple)\\\\n+\\\\n+On iOS and macOS, browsers can also get the PRT when the SSO extension profile is installed, enabling:\\\\n+- Chrome and Firefox support on macOS\\\\n+- Safari support on both iOS and macOS\\\\n+- Microsoft Edge on iOS and macOS\\\\n+\\\\n+### [Linux](#tab/browser-behavior-linux)\\\\n+\\\\n+Linux - Microsoft Edge will pull the PRT from the broker into the browser'\\\\n \\\\n-- Microsoft Edge on Windows, iOS, Android, and Firefox on Windows pull the PRT from the broker into the browser\\\\n-- On iOS and macOS, browsers can also get the PRT when the SSO extension profile is installed, enabling:\\\\n-  - Chrome and Firefox support on macOS\\\\n-  - Safari support on both iOS and macOS\\\\n+---\\\\n \\\\n The list of supported browsers is available here: [Supported Browsers](../conditional-access/concept-conditional-access-conditions.md#supported-browsers)\\\\n \\\\n@@ -125,11 +152,17 @@ A PRT is used by two key components in Windows:\\\\n \\\\n ### [macOS](#tab/macos-prt-used)\\\\n \\\\n-A PSSO PRT is used by the [SSO extension](../../identity-platform/apple-sso-plugin.md) to provide SSO to apps and websites. A PRT is used to request refresh and access tokens for applications that rely on the SSO extension for token requests. It also enables SSO on browsers by injecting the PRT into browser requests.\\\\n+A PRT is used by the [SSO extension](../../identity-platform/apple-sso-plugin.md) to provide SSO to apps and websites. A PRT is used to request refresh and access tokens for applications that rely on the SSO extension for token requests. It also enables SSO on browsers by injecting the PRT into browser requests.\\\\n+\\\\n+The browsers that support Browser SSO are Safari, Firefox, Chrome, and Microsoft Edge.\\\\n+\\\\n+### [iOS](#tab/ios-prt-used)\\\\n+\\\\n+For iOS, only Microsoft Edge and Safari are supported for Browser SSO.\\\\n \\\\n-### [iOS and Android](#tab/other-prt-used)\\\\n+### [Android](#tab/android-prt-used)\\\\n \\\\n-PRT is used in a similar manner to the description of the \\\\\\\"Microsoft Entra WAM plugin\\\\\\\" for native apps. The browsers that support Browser SSO are Safari, Firefox, Chrome, and Microsoft Edge.\\\\n+For Android, only Microsoft Edge is supported for Browser SSO. \\\\n \\\\n ### [Linux](#tab/linux-prt-used)\\\\n \\\\n@@ -139,7 +172,7 @@ The only native apps integrated today are Intune and Microsoft Edge Browser. For\\\\n \\\\n ## What is the lifetime of a PRT?\\\\n \\\\n-Once issued, a PRT is valid for 90 days and is continuously renewed as long as the user actively uses the device. Organizations can limit the lifetime of PRT sessions using the Sign-in [frequency session control](../conditional-access/concept-conditional-access-session.md)\\\\n+Once issued, a PRT is valid for 90 days and is continuously renewed as long as the user actively uses the device. Organizations can require users re-authenticate in order to acces resources using the Sign-in [frequency session control](../conditional-access/concept-conditional-access-session.md)\\\\n \\\\n ## How is a PRT renewed?\\\\n \\\\n@@ -188,10 +221,10 @@ A PRT is valid for 90 days and is renewed every 4 hours if the user actively use\\\\n \\\\n ## How is the PRT protected?\\\\n \\\\n-A PRT is protected by binding it to the device the user has signed in to, where it will use hardware binding when available and supported.\\\\n-\\\\n ### [Windows](#tab/windows-prt-protection)\\\\n \\\\n+A PRT is protected by binding it to the device the user has signed in to, where it will use hardware binding when available and supported.\\\\n+\\\\n Microsoft Entra ID and Windows 10 or newer enable PRT protection through the following methods:\\\\n \\\\n - **During first sign in:** During first sign in, a PRT is issued by signing requests using the device key cryptographically generated during device registration. On a device with a valid and functioning TPM, the device key is secured by the TPM preventing any malicious access. A PRT isn't issued if the corresponding device key signature can't be validated.\\\\n@@ -206,6 +239,17 @@ A Primary Refresh Token (PRT) is securely bound to the device on which the user\\\\n \\\\n The PRT is issued only after a request is signed using a secure enclave–backed Device Signing Key, which is cryptographically generated during device registration. If the signature from this key can't be validated, the PRT won't be issued. \\\\n \\\\n+For macOS where Platform SSO is used, it will use hardware binding by default.\\\\n+\\\\n+To enable hardware binding on iOS and Mac, follow guidance from [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md#upcoming-changes-to-device-identity-key-storage)\\\\n+\\\\n+\\\\n+### [Other operating systems](#tab/other-prt-protection)\\\\n+\\\\n+Android, iOS, and Linux do not support hardware binding for PRTs.\\\\n+\\\\n+To enable hardware binding on iOS and Mac, follow guidance from [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md#upcoming-changes-to-device-identity-key-storage)\\\\n+\\\\n ---\\\\n \\\\n ## How are App Tokens protected?\\\\n@@ -239,7 +283,8 @@ For an overview of how tokens are protected in general, refer to [Protecting tok\\\\n \\\\n ### [Windows](#tab/windows-browsercookies)\\\\n \\\\n-- In Windows 10 or newer, Microsoft Entra ID supports browser SSO in Microsoft Edge natively, in Google Chrome via native support or [extension](https://chromewebstore.google.com/detail/microsoft-single-sign-on/ppnbnpeolgkicgegkbkbjmhlideopiji) and in Mozilla Firefox v91+ via a browser setting. The security is built not only to protect the cookies but also the endpoints to which the cookies are sent.\\\\n+- In Windows 10 or newer, Microsoft Entra ID supports browser SSO in Microsoft Edge natively, in Google Chrome via native support or [extension](https://chromewebstore.google.com/detail/microsoft-single-sign-on/ppnbnpeolgkicgegkbkbjmhlideopiji) and in Mozilla Firefox v91+ via a browser setting.\\\\n+\\\\n - When a user initiates a browser interaction, the browser (or the extension) invokes a [platform API](/windows/win32/api/proofofpossessioncookieinfo/nf-proofofpossessioncookieinfo-iproofofpossessioncookieinfomanager-getcookieinfoforuri). The extension calls this API via a native messaging host. The API ensures that the page is from one of the allowed domains. The browser sends full query string, which includes a nonce. The platform API creates a PRT and device header, which are signed with the TPM-protected keys. The PRT-header is signed by the session key, the device header by device key, thus it's difficult to tamper with. These headers are included in all requests for Microsoft Entra ID to validate the device it's originating from and the user. Once Microsoft Entra ID validates those headers, it issues a session cookie to the browser. This session cookie also contains the same session or device key used to sign the request. During subsequent requests, the session key is validated effectively binding the cookie to the device and preventing replays from elsewhere.\\\\n \\\\n \\\\n@@ -294,7 +339,9 @@ A PRT is invalidated in the following scenarios:\\\\n \\\\n The following diagrams illustrate the underlying details in issuing, renewing, and using a PRT to request an access token for an application. In addition, these steps also describe how the previously mentioned security mechanisms are applied during these interactions.\\\\n \\\\n-### PRT issuance during first sign in\\\\n+Below are the detailed flows specific for the Windows operating system.\\\\n+\\\\n+### PRT issuance during first sign in (Windows)\\\\n \\\\n ![PRT issuance during first sign in detailed flow](./media/concept-primary-refresh-token/prt-initial-sign-in.png)\\\\n \\\\n@@ -313,7 +360,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n | E | Microsoft Entra ID validates the user credentials, the nonce, and device signature, verifies that the device is valid in the tenant and issues the encrypted PRT. Along with the PRT, Microsoft Entra ID also issues a symmetric key, called the Session key encrypted by Microsoft Entra ID using the Transport key (tkpub). In addition, the Session key is also embedded in the PRT. This Session key acts as the Proof-of-possession (PoP) key for subsequent requests with the PRT. |\\\\n | F | CloudAP plugin passes the encrypted PRT and Session key to CloudAP. CloudAP request the TPM to decrypt the Session key using the Transport key (tkpriv) and reencrypt it using the TPM's own key. CloudAP stores the encrypted Session key in its cache along with the PRT. |\\\\n \\\\n-### PRT renewal in subsequent logons\\\\n+### PRT renewal in subsequent logons (Windows)\\\\n \\\\n ![PRT renewal in subsequent logons](./media/concept-primary-refresh-token/prt-renewal-subsequent-logons.png)\\\\n \\\\n@@ -330,7 +377,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n > [!NOTE]\\\\n > A PRT can be renewed externally without the need of a VPN connection when `usernamemixed` endpoints are enabled externally.\\\\n \\\\n-### PRT usage during app token requests\\\\n+### PRT usage during app token requests (Windows)\\\\n \\\\n ![PRT usage during app token requests](./media/concept-primary-refresh-token/prt-usage-app-token-requests.png)\\\\n \\\\n@@ -342,7 +389,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n | D | WAM plugin requests CloudAP plugin to decrypt the tokens, which, in turn, requests the TPM to decrypt using the Session key, resulting in WAM plugin getting both the tokens. Next, WAM plugin provides only the access token to the application, while it reencrypts the refresh token with DPAPI and stores it in its own cache. WAM plugin uses the refresh token going forward for this application. WAM plugin also gives back the new PRT to CloudAP plugin, which validates the PRT with Microsoft Entra ID before updating it in its own cache. CloudAP plugin uses the new PRT going forward. |\\\\n | E | WAM provides the newly issued access token to the calling application. |\\\\n \\\\n-### Browser SSO using PRT\\\\n+### Browser SSO using PRT (Windows)\\\\n \\\\n ![Browser SSO using PRT](./media/concept-primary-refresh-token/browser-sso-using-prt.png)\\\\n \\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"76209d45a9126c8268567fdd7547cfe8ca009dcc\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/monitoring-health/concept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 0,\\r\\n    \\\"changes\\\": 1,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/eb28f7511eaaaf4cf23df0518f556f40c17ef976/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md?ref=eb28f7511eaaaf4cf23df0518f556f40c17ef976\\\",\\r\\n    \\\"patch\\\": \\\"@@ -149,6 +149,7 @@ The following scenarios are important to consider when you're reviewing sign-in\\\\n   - `b2bDirectConnect` - A cross tenant sign-in performed by a B2B.\\\\n   - `microsoftSupport`- A cross tenant sign-in performed by a Microsoft support agent in a Microsoft external tenant.\\\\n   - `serviceProvider` - A cross-tenant sign-in performed by a Cloud Service Provider (CSP) or similar admin on behalf of that CSP's customer in a tenant.\\\\n+  - `passthrough` - A cross-tenant sign-in where authentication is forwarded to the user’s home identity provider without requiring re-entry of credentials.\\\\n   - `unknownFutureValue` - A value used by MS Graph to help clients handle changes in enum lists. For more information, see [Best practices for working with Microsoft Graph](/graph/best-practices-concept).\\\\n \\\\n - **Tenant:** The sign-in log tracks two tenant identifiers that are relevant in cross-tenant scenarios:\\\"\\r\\n  }\\r\\n]. Please summarise it in a few sentences, using UK grammar and ensure the response is formatted for markdown. Do not start the response with here is summary.\",\"role\":\"user\"}",
      "Response": "This commit updates documentation regarding Microsoft Entra ID's Single Sign-On (SSO) capabilities.\n\nKey changes include:\n\n*   **Clarification of the link between the Apple SSO Plugin and the Primary Refresh Token (PRT):** The documentation now directs users to the correct section (`#how-is-a-prt-used`) when discussing how the Apple SSO plugin supports SSO for non-MSAL applications.\n*   **Expansion and refinement of the PRT documentation:** Significant updates have been made to the \"Understanding Primary Refresh Token (PRT)\" article. This includes:\n    *   Adding a definition for \"broker\".\n    *   Improving the distinction between PRT issuance for different operating systems (Windows, macOS with and without Platform SSO, iOS, and Android).\n    *   Clarifying browser behaviour and supported browsers for PRT access across platforms.\n    *   Detailing how PRTs are used by the SSO extension on macOS and the supported browsers for Browser SSO on iOS and Android.\n    *   Refining the PRT protection sections to be more explicit about hardware binding on macOS with Platform SSO and its applicability to iOS and Mac via the Apple SSO plugin.\n    *   Specifying flows related to PRT issuance, renewal, and usage for the Windows operating system.\n*   **Addition to Sign-in Log Activity Details:** A new scenario, `passthrough`, has been added to the sign-in log activity details to describe cross-tenant sign-ins where authentication is forwarded to the user's home identity provider.",
      "Model": "google:gemini-2.5-flash-lite",
      "Provider": "google",
      "ModelName": "gemini-2.5-flash-lite",
      "Timestamp": "2025-10-16T07:00:41.4226508+00:00"
    },
    "files": [
      {
        "filename": "docs/identity-platform/apple-sso-plugin.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1
      },
      {
        "filename": "docs/identity/devices/concept-primary-refresh-token.md",
        "status": "modified",
        "additions": 67,
        "deletions": 20
      },
      {
        "filename": "docs/identity/monitoring-health/concept-sign-in-log-activity-details.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0
      }
    ]
  },
  {
    "sha": "c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd",
    "url": "https://github.com/MicrosoftDocs/entra-docs/commit/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd",
    "author": "learn-build-service-prod[bot]",
    "email": "113403604+learn-build-service-prod[bot]@users.noreply.github.com",
    "date": "2025-10-16T05:12:33Z",
    "message": "Merge pull request #10036 from MicrosoftDocs/main\n\nAuto Publish – main to live - 2025-10-16 05:01 UTC",
    "ai_summary": {
      "Messages": "{\"content\":\"The following is the commit files that have changed: [\\r\\n  {\\r\\n    \\\"sha\\\": \\\"8b22779c8780e29c76ebf3e04384f6c7a7535bda\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity-platform/apple-sso-plugin.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 1,\\r\\n    \\\"changes\\\": 2,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity-platform%2Fapple-sso-plugin.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity-platform%2Fapple-sso-plugin.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity-platform%2Fapple-sso-plugin.md?ref=c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd\\\",\\r\\n    \\\"patch\\\": \\\"@@ -420,7 +420,7 @@ You don't need to change the code in those apps as long as the following conditi\\\\n \\\\n In this case, SSO is provided when the application creates a network request and opens a web browser to sign the user in. When a user is redirected to a Microsoft Entra sign-in URL, the SSO plug-in validates the URL and checks for an SSO credential for that URL. If it finds the credential, the SSO plug-in passes it to Microsoft Entra ID, which authorizes the application to complete the network request without asking the user to enter credentials. Additionally, if the device is known to Microsoft Entra ID, the SSO plug-in passes the device certificate to satisfy the device-based Conditional Access check. \\\\n \\\\n-To support SSO for non-MSAL apps, the SSO plug-in implements a protocol similar to the Windows browser plug-in described in [What is a primary refresh token?](~/identity/devices/concept-primary-refresh-token.md#browser-sso-using-prt). \\\\n+To support SSO for non-MSAL apps, the SSO plug-in implements a protocol similar to the Windows browser plug-in described in [What is a primary refresh token?](~/identity/devices/concept-primary-refresh-token.md#how-is-a-prt-used). \\\\n \\\\n Compared to MSAL-based apps, the SSO plug-in acts more transparently for non-MSAL apps. It integrates with the existing browser sign-in experience that apps provide. \\\\n \\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"f3c61ec0b4944756a53ede4ac23746aa9d9fe6ab\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/devices/concept-primary-refresh-token.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 67,\\r\\n    \\\"deletions\\\": 20,\\r\\n    \\\"changes\\\": 87,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fdevices%2Fconcept-primary-refresh-token.md?ref=c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd\\\",\\r\\n    \\\"patch\\\": \\\"@@ -8,7 +8,7 @@ ms.date: 06/27/2025\\\\n ms.author: owinfrey\\\\n author: owinfreyATL\\\\n manager: dougeby\\\\n-ms.reviewer: \\\\n+ms.reviewer: jploegert\\\\n ms.custom: sfi-image-nochange\\\\n ---\\\\n # Understanding Primary Refresh Token (PRT)\\\\n@@ -23,6 +23,7 @@ The following Windows components play a key role in requesting and using a Prima\\\\n \\\\n | **Term** | **Description** |\\\\n | :--- | --- |\\\\n+| **broker** | An identity broker is a service that acts as an intermediary between an identity providers (IdPs) and service providers (SPs), simplifying authentication and authorization . Web Account Manager is an example of an identity broker.|\\\\n | **Cloud Authentication Provider (CloudAP)**| CloudAP is the modern authentication provider for Windows sign in, that verifies users logging to a Windows 10 or newer device. CloudAP provides a plugin framework that identity providers can build on to enable authentication to Windows using that identity provider's credentials. |\\\\n | **Web Account Manager (WAM)**| WAM is the default token broker on Windows 10 or newer devices. WAM also provides a plugin framework that identity providers can build on and enable SSO to their applications relying on that identity provider.|\\\\n | **Microsoft Entra CloudAP plugin**| A Microsoft Entra specific plugin built on the CloudAP framework that verifies user credentials with Microsoft Entra ID during Windows sign in.|\\\\n@@ -55,12 +56,12 @@ For **Registered device PRTs**, the PRT is issued to users on registered devices\\\\n - Device key (dkpub/dkpriv)\\\\n - Transport key (tkpub/tkpriv)\\\\n \\\\n-If the device has a valid and functioning TPM/Secure Hardware Storage, the private keys are bound to the device’s Secure Storage on supported platforms. The public keys are sent to Microsoft Entra ID during the device registration process in order to validate the device state during PRT requests.\\\\n-\\\\n PRT can only be issued when a Microsoft Entra ID broker is present. Broker is a component distributed with the following apps: Intune Company Portal on macOS and Linux, Authenticator on iOS, Authenticator, Link to Windows, and Company portal on Android. On Mac, Mobile Device Management (MDM) is required to activate the broker alongside the SSO extension profile: [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md)\\\\n \\\\n ### [Windows](#tab/windows-prt-issued)\\\\n \\\\n+If the device has a valid and functioning TPM/Secure Hardware Storage, the private keys are bound to the device’s Secure Storage on supported platforms. The public keys are sent to Microsoft Entra ID during the device registration process in order to validate the device state during PRT requests.\\\\n+\\\\n The PRT is issued during user authentication on a Windows 10 or newer device in two scenarios:\\\\n \\\\n * **Microsoft Entra joined** or **Microsoft Entra hybrid joined**: A PRT is issued during Windows sign-in when a user signs in with their organization credentials. A PRT is issued with all Windows 10 or newer supported credentials, for example, password and Windows Hello for Business. In this scenario, Microsoft Entra CloudAP plugin is the primary authority for the PRT\\\\n@@ -72,13 +73,19 @@ In Microsoft Entra registered device scenarios, the Microsoft Entra WAM plugin i\\\\n \\\\n ### [macOS](#tab/macos-prt-issued)\\\\n \\\\n+**macOS with Platform SSO**\\\\n+\\\\n macOS [Platform Single Sign-on (PSSO)](macos-psso.md) is a new feature powered by Microsoft’s Enterprise SSO plug-in, Platform Credentials for macOS that enables users to sign in to Mac devices using their Microsoft Entra ID credentials.\\\\n \\\\n The PSSO Primary Refresh Token (PRT) is issued exclusively to Entra-joined macOS devices that successfully completed Platform SSO registration. During this registration process, macOS generates secure enclave–backed cryptographic key pairs: one for device signing and another for device encryption. The public key references are shared with the SSO extension.\\\\n \\\\n The SSO extension uses these keys to complete device registration with the Microsoft Entra ID Device Registration Service. It then configures Apple’s loginConfiguration API with the necessary parameters for PRT acquisition.\\\\n \\\\n-Once registration is successfully completed, macOS initiates a sign in request signed with the Device Signing key. Microsoft Entra ID validates the request, device signing key and associated parameters, and issues PRT response. macOS decrypts this response using Device Encryption key, stores the PRT and makes it available to the SSO extension. The sign in request is sent during user authentication on PSSO registered macOS.\\\\n+**macOS without Platform SSO**\\\\n+\\\\n+macOS supports Unregistered PRTs for Microsoft Edge and Registered PRTs when device is workplace joined and broker is present\\\\n+\\\\n+Once registration is successfully completed, macOS initiates a sign in request signed with the Device Signing key. Microsoft Entra ID validates the request, device signing key and associated parameters, and issues PRT response.\\\\n \\\\n ### [iOS and Android](#tab/other-prt-issued)\\\\n \\\\n@@ -91,12 +98,32 @@ Once registration is successfully completed, macOS initiates a sign in request s\\\\n \\\\n ### Browser behavior\\\\n \\\\n-On non-Windows platforms, browsers gain access to the PRT in multiple ways:\\\\n+Browsers gain access to the PRT in multiple ways, depending on the operating system:\\\\n+\\\\n+### [Windows](#tab/browser-behavior-windows)\\\\n+\\\\n+Windows - Will pull the PRT from the broker into the browser on the following browsers:\\\\n+- Microsoft Edge\\\\n+- Firefox\\\\n+\\\\n+- Chrome\\\\n+\\\\n+### [Android](#tab/browser-behavior-android)\\\\n+\\\\n+Android - Microsoft Edge will pull the PRT from the broker into the browser\\\\n+\\\\n+### [iOS and macOS](#tab/browser-behavior-apple)\\\\n+\\\\n+On iOS and macOS, browsers can also get the PRT when the SSO extension profile is installed, enabling:\\\\n+- Chrome and Firefox support on macOS\\\\n+- Safari support on both iOS and macOS\\\\n+- Microsoft Edge on iOS and macOS\\\\n+\\\\n+### [Linux](#tab/browser-behavior-linux)\\\\n+\\\\n+Linux - Microsoft Edge will pull the PRT from the broker into the browser'\\\\n \\\\n-- Microsoft Edge on Windows, iOS, Android, and Firefox on Windows pull the PRT from the broker into the browser\\\\n-- On iOS and macOS, browsers can also get the PRT when the SSO extension profile is installed, enabling:\\\\n-  - Chrome and Firefox support on macOS\\\\n-  - Safari support on both iOS and macOS\\\\n+---\\\\n \\\\n The list of supported browsers is available here: [Supported Browsers](../conditional-access/concept-conditional-access-conditions.md#supported-browsers)\\\\n \\\\n@@ -125,11 +152,17 @@ A PRT is used by two key components in Windows:\\\\n \\\\n ### [macOS](#tab/macos-prt-used)\\\\n \\\\n-A PSSO PRT is used by the [SSO extension](../../identity-platform/apple-sso-plugin.md) to provide SSO to apps and websites. A PRT is used to request refresh and access tokens for applications that rely on the SSO extension for token requests. It also enables SSO on browsers by injecting the PRT into browser requests.\\\\n+A PRT is used by the [SSO extension](../../identity-platform/apple-sso-plugin.md) to provide SSO to apps and websites. A PRT is used to request refresh and access tokens for applications that rely on the SSO extension for token requests. It also enables SSO on browsers by injecting the PRT into browser requests.\\\\n+\\\\n+The browsers that support Browser SSO are Safari, Firefox, Chrome, and Microsoft Edge.\\\\n+\\\\n+### [iOS](#tab/ios-prt-used)\\\\n+\\\\n+For iOS, only Microsoft Edge and Safari are supported for Browser SSO.\\\\n \\\\n-### [iOS and Android](#tab/other-prt-used)\\\\n+### [Android](#tab/android-prt-used)\\\\n \\\\n-PRT is used in a similar manner to the description of the \\\\\\\"Microsoft Entra WAM plugin\\\\\\\" for native apps. The browsers that support Browser SSO are Safari, Firefox, Chrome, and Microsoft Edge.\\\\n+For Android, only Microsoft Edge is supported for Browser SSO. \\\\n \\\\n ### [Linux](#tab/linux-prt-used)\\\\n \\\\n@@ -139,7 +172,7 @@ The only native apps integrated today are Intune and Microsoft Edge Browser. For\\\\n \\\\n ## What is the lifetime of a PRT?\\\\n \\\\n-Once issued, a PRT is valid for 90 days and is continuously renewed as long as the user actively uses the device. Organizations can limit the lifetime of PRT sessions using the Sign-in [frequency session control](../conditional-access/concept-conditional-access-session.md)\\\\n+Once issued, a PRT is valid for 90 days and is continuously renewed as long as the user actively uses the device. Organizations can require users re-authenticate in order to acces resources using the Sign-in [frequency session control](../conditional-access/concept-conditional-access-session.md)\\\\n \\\\n ## How is a PRT renewed?\\\\n \\\\n@@ -188,10 +221,10 @@ A PRT is valid for 90 days and is renewed every 4 hours if the user actively use\\\\n \\\\n ## How is the PRT protected?\\\\n \\\\n-A PRT is protected by binding it to the device the user has signed in to, where it will use hardware binding when available and supported.\\\\n-\\\\n ### [Windows](#tab/windows-prt-protection)\\\\n \\\\n+A PRT is protected by binding it to the device the user has signed in to, where it will use hardware binding when available and supported.\\\\n+\\\\n Microsoft Entra ID and Windows 10 or newer enable PRT protection through the following methods:\\\\n \\\\n - **During first sign in:** During first sign in, a PRT is issued by signing requests using the device key cryptographically generated during device registration. On a device with a valid and functioning TPM, the device key is secured by the TPM preventing any malicious access. A PRT isn't issued if the corresponding device key signature can't be validated.\\\\n@@ -206,6 +239,17 @@ A Primary Refresh Token (PRT) is securely bound to the device on which the user\\\\n \\\\n The PRT is issued only after a request is signed using a secure enclave–backed Device Signing Key, which is cryptographically generated during device registration. If the signature from this key can't be validated, the PRT won't be issued. \\\\n \\\\n+For macOS where Platform SSO is used, it will use hardware binding by default.\\\\n+\\\\n+To enable hardware binding on iOS and Mac, follow guidance from [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md#upcoming-changes-to-device-identity-key-storage)\\\\n+\\\\n+\\\\n+### [Other operating systems](#tab/other-prt-protection)\\\\n+\\\\n+Android, iOS, and Linux do not support hardware binding for PRTs.\\\\n+\\\\n+To enable hardware binding on iOS and Mac, follow guidance from [Apple SSO Plugin](../../identity-platform/apple-sso-plugin.md#upcoming-changes-to-device-identity-key-storage)\\\\n+\\\\n ---\\\\n \\\\n ## How are App Tokens protected?\\\\n@@ -239,7 +283,8 @@ For an overview of how tokens are protected in general, refer to [Protecting tok\\\\n \\\\n ### [Windows](#tab/windows-browsercookies)\\\\n \\\\n-- In Windows 10 or newer, Microsoft Entra ID supports browser SSO in Microsoft Edge natively, in Google Chrome via native support or [extension](https://chromewebstore.google.com/detail/microsoft-single-sign-on/ppnbnpeolgkicgegkbkbjmhlideopiji) and in Mozilla Firefox v91+ via a browser setting. The security is built not only to protect the cookies but also the endpoints to which the cookies are sent.\\\\n+- In Windows 10 or newer, Microsoft Entra ID supports browser SSO in Microsoft Edge natively, in Google Chrome via native support or [extension](https://chromewebstore.google.com/detail/microsoft-single-sign-on/ppnbnpeolgkicgegkbkbjmhlideopiji) and in Mozilla Firefox v91+ via a browser setting.\\\\n+\\\\n - When a user initiates a browser interaction, the browser (or the extension) invokes a [platform API](/windows/win32/api/proofofpossessioncookieinfo/nf-proofofpossessioncookieinfo-iproofofpossessioncookieinfomanager-getcookieinfoforuri). The extension calls this API via a native messaging host. The API ensures that the page is from one of the allowed domains. The browser sends full query string, which includes a nonce. The platform API creates a PRT and device header, which are signed with the TPM-protected keys. The PRT-header is signed by the session key, the device header by device key, thus it's difficult to tamper with. These headers are included in all requests for Microsoft Entra ID to validate the device it's originating from and the user. Once Microsoft Entra ID validates those headers, it issues a session cookie to the browser. This session cookie also contains the same session or device key used to sign the request. During subsequent requests, the session key is validated effectively binding the cookie to the device and preventing replays from elsewhere.\\\\n \\\\n \\\\n@@ -294,7 +339,9 @@ A PRT is invalidated in the following scenarios:\\\\n \\\\n The following diagrams illustrate the underlying details in issuing, renewing, and using a PRT to request an access token for an application. In addition, these steps also describe how the previously mentioned security mechanisms are applied during these interactions.\\\\n \\\\n-### PRT issuance during first sign in\\\\n+Below are the detailed flows specific for the Windows operating system.\\\\n+\\\\n+### PRT issuance during first sign in (Windows)\\\\n \\\\n ![PRT issuance during first sign in detailed flow](./media/concept-primary-refresh-token/prt-initial-sign-in.png)\\\\n \\\\n@@ -313,7 +360,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n | E | Microsoft Entra ID validates the user credentials, the nonce, and device signature, verifies that the device is valid in the tenant and issues the encrypted PRT. Along with the PRT, Microsoft Entra ID also issues a symmetric key, called the Session key encrypted by Microsoft Entra ID using the Transport key (tkpub). In addition, the Session key is also embedded in the PRT. This Session key acts as the Proof-of-possession (PoP) key for subsequent requests with the PRT. |\\\\n | F | CloudAP plugin passes the encrypted PRT and Session key to CloudAP. CloudAP request the TPM to decrypt the Session key using the Transport key (tkpriv) and reencrypt it using the TPM's own key. CloudAP stores the encrypted Session key in its cache along with the PRT. |\\\\n \\\\n-### PRT renewal in subsequent logons\\\\n+### PRT renewal in subsequent logons (Windows)\\\\n \\\\n ![PRT renewal in subsequent logons](./media/concept-primary-refresh-token/prt-renewal-subsequent-logons.png)\\\\n \\\\n@@ -330,7 +377,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n > [!NOTE]\\\\n > A PRT can be renewed externally without the need of a VPN connection when `usernamemixed` endpoints are enabled externally.\\\\n \\\\n-### PRT usage during app token requests\\\\n+### PRT usage during app token requests (Windows)\\\\n \\\\n ![PRT usage during app token requests](./media/concept-primary-refresh-token/prt-usage-app-token-requests.png)\\\\n \\\\n@@ -342,7 +389,7 @@ The following diagrams illustrate the underlying details in issuing, renewing, a\\\\n | D | WAM plugin requests CloudAP plugin to decrypt the tokens, which, in turn, requests the TPM to decrypt using the Session key, resulting in WAM plugin getting both the tokens. Next, WAM plugin provides only the access token to the application, while it reencrypts the refresh token with DPAPI and stores it in its own cache. WAM plugin uses the refresh token going forward for this application. WAM plugin also gives back the new PRT to CloudAP plugin, which validates the PRT with Microsoft Entra ID before updating it in its own cache. CloudAP plugin uses the new PRT going forward. |\\\\n | E | WAM provides the newly issued access token to the calling application. |\\\\n \\\\n-### Browser SSO using PRT\\\\n+### Browser SSO using PRT (Windows)\\\\n \\\\n ![Browser SSO using PRT](./media/concept-primary-refresh-token/browser-sso-using-prt.png)\\\\n \\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"sha\\\": \\\"76209d45a9126c8268567fdd7547cfe8ca009dcc\\\",\\r\\n    \\\"filename\\\": \\\"docs/identity/monitoring-health/concept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"status\\\": \\\"modified\\\",\\r\\n    \\\"additions\\\": 1,\\r\\n    \\\"deletions\\\": 0,\\r\\n    \\\"changes\\\": 1,\\r\\n    \\\"blob_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/blob/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"raw_url\\\": \\\"https://github.com/MicrosoftDocs/entra-docs/raw/c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md\\\",\\r\\n    \\\"contents_url\\\": \\\"https://api.github.com/repos/MicrosoftDocs/entra-docs/contents/docs%2Fidentity%2Fmonitoring-health%2Fconcept-sign-in-log-activity-details.md?ref=c2c37a2e463d4ddaec1174743dfc8f663c4ec0dd\\\",\\r\\n    \\\"patch\\\": \\\"@@ -149,6 +149,7 @@ The following scenarios are important to consider when you're reviewing sign-in\\\\n   - `b2bDirectConnect` - A cross tenant sign-in performed by a B2B.\\\\n   - `microsoftSupport`- A cross tenant sign-in performed by a Microsoft support agent in a Microsoft external tenant.\\\\n   - `serviceProvider` - A cross-tenant sign-in performed by a Cloud Service Provider (CSP) or similar admin on behalf of that CSP's customer in a tenant.\\\\n+  - `passthrough` - A cross-tenant sign-in where authentication is forwarded to the user’s home identity provider without requiring re-entry of credentials.\\\\n   - `unknownFutureValue` - A value used by MS Graph to help clients handle changes in enum lists. For more information, see [Best practices for working with Microsoft Graph](/graph/best-practices-concept).\\\\n \\\\n - **Tenant:** The sign-in log tracks two tenant identifiers that are relevant in cross-tenant scenarios:\\\"\\r\\n  }\\r\\n]. Please summarise it in a few sentences, using UK grammar and ensure the response is formatted for markdown. Do not start the response with here is summary.\",\"role\":\"user\"}",
      "Response": "The commits primarily update documentation related to Microsoft Entra ID's single sign-on (SSO) capabilities.\n\nKey changes include:\n\n*   **Clarifying the SSO protocol for non-MSAL apps:** The documentation for the Apple SSO plugin has been updated to more accurately reference the protocol used for non-MSAL applications, linking it to the correct section within the Primary Refresh Token (PRT) concept documentation.\n*   **Expanding the PRT concept documentation:** The document detailing the Primary Refresh Token (PRT) has undergone significant revisions. This includes adding a definition for 'broker', detailing PRT issuance for macOS with Platform SSO, and providing a more comprehensive breakdown of browser behaviour and PRT usage across various operating systems (Windows, Android, iOS, macOS, and Linux). It also clarifies PRT protection mechanisms and renewal processes, with specific flow diagrams now annotated for Windows.\n*   **Adding a new sign-in log activity detail:** A new value, `passthrough`, has been added to the `CrossTenantAccessIdentity` enum in the sign-in log activity details documentation. This new value describes a cross-tenant sign-in where authentication is forwarded to the user's home identity provider without requiring re-entry of credentials.",
      "Model": "google:gemini-2.5-flash-lite",
      "Provider": "google",
      "ModelName": "gemini-2.5-flash-lite",
      "Timestamp": "2025-10-16T07:00:43.8657005+00:00"
    },
    "files": [
      {
        "filename": "docs/identity-platform/apple-sso-plugin.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1
      },
      {
        "filename": "docs/identity/devices/concept-primary-refresh-token.md",
        "status": "modified",
        "additions": 67,
        "deletions": 20
      },
      {
        "filename": "docs/identity/monitoring-health/concept-sign-in-log-activity-details.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0
      }
    ]
  }
]